#!/usr/bin/env bash

source "tests/support/utils.sh"

# To measure the performance of cd'ing into a trusted directory with a larger
# .envrc file.
# The result categorization is based on what I measured on my machine. It's
# slower in a Docker container.

set -e

if [ -z "$RUNNING_IN_CONTAINER" ]; then
  _run_with_empty_env="env -i PATH=$PATH TARGET_SHELL_NAME=$TARGET_SHELL_NAME "
fi


echo "== Bash ($THRESHOLD_FAST-$THRESHOLD_OK)"

THRESHOLD_FAST=40
THRESHOLD_OK=60

# shellcheck disable=SC2086
elapsed_time="$(${_run_with_empty_env}bash --noprofile --norc -i tests/performance/example.sh)"

if [ "$elapsed_time" -lt "$THRESHOLD_FAST" ]; then
  _echo_in_magenta "${elapsed_time}ms - Unexpectedly fast"
elif [ "$elapsed_time" -lt "$THRESHOLD_OK" ]; then
  _echo_in_green "${elapsed_time}ms - ok"
else
  _echo_in_yellow "${elapsed_time}ms - BAD"
fi


echo "== Zsh ($THRESHOLD_FAST-$THRESHOLD_OK)"

THRESHOLD_FAST=30
THRESHOLD_OK=50

# shellcheck disable=SC2086
elapsed_time="$(${_run_with_empty_env}zsh --no-globalrcs --no-rcs -i tests/performance/example.sh)"
if [ "$elapsed_time" -lt $THRESHOLD_FAST ]; then
  _echo_in_magenta "${elapsed_time}ms - Unexpectedly fast"
elif [ "$elapsed_time" -lt $THRESHOLD_OK ]; then
  _echo_in_green "${elapsed_time}ms - ok"
else
  _echo_in_yellow "${elapsed_time}ms - BAD"
fi
